name: Deploy to web apps

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev, staging, prod)'
        required: true
        default: 'dev'

env:
  ACR_REGISTRY: azureapps.azurecr.io
  IMAGE_NAME: nodejs-app
  TERRAFORM_DIR: terraform
  APP_DIR: applications/app_js

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug Secrets
        run: |
          echo "ACR_REGISTRY: ${{ env.ACR_REGISTRY }}"
          echo "ACR_USERNAME is set: ${{ secrets.ACR_USERNAME != '' }}"
          echo "Environment input: ${{ github.event.inputs.environment }}"

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build \
          --build-arg ENV=${{ github.event.inputs.environment || 'dev' }} \
          -t ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.environment || 'dev' }} \
          ${{ env.APP_DIR }}
          docker push ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.environment || 'dev' }}

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        working-directory: deployments/${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Apply
        working-directory: deployments/${{ env.TERRAFORM_DIR }}
        run: |
          terraform apply -auto-approve

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ github.event.inputs.environment || 'dev' }}-nodejs-app
          images: ${{ env.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.environment || 'dev' }}

  test:
    runs-on: ubuntu-latest
    needs: deploy-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get App URL
        id: get-url
        run: |
          APP_URL=$(terraform -chdir=${{ env.TERRAFORM_DIR }} output -raw app_service_url)
          echo "APP_URL=$APP_URL" >> $GITHUB_ENV

      - name: Test Application
        run: |
          curl -s -o /dev/null -w "%{http_code}" $APP_URL | grep 200 || { echo "App not reachable"; exit 1; }
          echo "Application is up and running at $APP_URL"
